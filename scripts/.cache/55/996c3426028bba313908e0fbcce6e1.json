{"id":"History.js","dependencies":[{"name":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\package.json","includedInParent":true,"mtime":1581896610560}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar History =\n/*#__PURE__*/\nfunction () {\n  //This class is my implementation of a stack that is currently\n  // used only to check values in the previous frame(s).\n  function History(maxhistory) {\n    _classCallCheck(this, History);\n\n    this.stack = []; //defines how many frames of historic values should be stored.\n\n    this.maxhistory = 20;\n  }\n\n  _createClass(History, [{\n    key: \"add\",\n    value: function add(obj) {\n      if (this.stack.length < this.maxhistory) {\n        //Checks if the length of the stack exceeds the maximum history size.\n        this.stack.push(obj);\n      } else {\n        this.stack.shift();\n        this.stack.push(obj);\n      }\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      // returns the last item added to the stack without removing it.\n      return this.stack[this.stack.length - 1];\n    }\n  }]);\n\n  return History;\n}();\n\nexports.default = History;"},"sourceMaps":{"js":{"mappings":[{"name":"History","generated":{"line":14,"column":4},"source":"History.js","original":{"line":1,"column":21}},{"generated":{"line":17,"column":0},"source":"History.js","original":{"line":2,"column":2}},{"generated":{"line":18,"column":0},"source":"History.js","original":{"line":3,"column":2}},{"generated":{"line":19,"column":0},"source":"History.js","original":{"line":5,"column":2}},{"name":"maxhistory","generated":{"line":19,"column":19},"source":"History.js","original":{"line":5,"column":14}},{"generated":{"line":19,"column":29},"source":"History.js","original":{"line":5,"column":2}},{"generated":{"line":19,"column":31},"source":"History.js","original":{"line":5,"column":26}},{"generated":{"line":20,"column":0},"source":"History.js","original":{"line":5,"column":26}},{"generated":{"line":22,"column":0},"source":"History.js","original":{"line":6,"column":4}},{"name":"stack","generated":{"line":22,"column":9},"source":"History.js","original":{"line":6,"column":9}},{"generated":{"line":22,"column":14},"source":"History.js","original":{"line":6,"column":4}},{"generated":{"line":22,"column":17},"source":"History.js","original":{"line":6,"column":17}},{"generated":{"line":22,"column":19},"source":"History.js","original":{"line":6,"column":4}},{"generated":{"line":22,"column":20},"source":"History.js","original":{"line":5,"column":26}},{"generated":{"line":22,"column":21},"source":"History.js","original":{"line":7,"column":4}},{"generated":{"line":24,"column":0},"source":"History.js","original":{"line":8,"column":4}},{"name":"maxhistory","generated":{"line":24,"column":9},"source":"History.js","original":{"line":8,"column":9}},{"generated":{"line":24,"column":19},"source":"History.js","original":{"line":8,"column":4}},{"generated":{"line":24,"column":22},"source":"History.js","original":{"line":8,"column":22}},{"generated":{"line":24,"column":24},"source":"History.js","original":{"line":8,"column":4}},{"generated":{"line":25,"column":0},"source":"History.js","original":{"line":9,"column":3}},{"name":"obj","generated":{"line":29,"column":24},"source":"History.js","original":{"line":10,"column":6}},{"generated":{"line":29,"column":29},"source":"History.js","original":{"line":10,"column":11}},{"generated":{"line":30,"column":0},"source":"History.js","original":{"line":11,"column":4}},{"generated":{"line":30,"column":10},"source":"History.js","original":{"line":11,"column":8}},{"name":"stack","generated":{"line":30,"column":15},"source":"History.js","original":{"line":11,"column":13}},{"generated":{"line":30,"column":20},"source":"History.js","original":{"line":11,"column":8}},{"name":"length","generated":{"line":30,"column":21},"source":"History.js","original":{"line":11,"column":19}},{"generated":{"line":30,"column":27},"source":"History.js","original":{"line":11,"column":8}},{"generated":{"line":30,"column":30},"source":"History.js","original":{"line":11,"column":28}},{"name":"maxhistory","generated":{"line":30,"column":35},"source":"History.js","original":{"line":11,"column":33}},{"generated":{"line":30,"column":45},"source":"History.js","original":{"line":11,"column":4}},{"generated":{"line":30,"column":47},"source":"History.js","original":{"line":11,"column":45}},{"generated":{"line":31,"column":0},"source":"History.js","original":{"line":12,"column":6}},{"generated":{"line":32,"column":0},"source":"History.js","original":{"line":13,"column":6}},{"name":"stack","generated":{"line":32,"column":13},"source":"History.js","original":{"line":13,"column":11}},{"generated":{"line":32,"column":18},"source":"History.js","original":{"line":13,"column":6}},{"name":"push","generated":{"line":32,"column":19},"source":"History.js","original":{"line":13,"column":17}},{"generated":{"line":32,"column":23},"source":"History.js","original":{"line":13,"column":6}},{"name":"obj","generated":{"line":32,"column":24},"source":"History.js","original":{"line":13,"column":22}},{"generated":{"line":32,"column":27},"source":"History.js","original":{"line":13,"column":6}},{"generated":{"line":33,"column":0},"source":"History.js","original":{"line":14,"column":5}},{"generated":{"line":33,"column":7},"source":"History.js","original":{"line":11,"column":4}},{"generated":{"line":33,"column":13},"source":"History.js","original":{"line":14,"column":11}},{"generated":{"line":34,"column":0},"source":"History.js","original":{"line":15,"column":6}},{"name":"stack","generated":{"line":34,"column":13},"source":"History.js","original":{"line":15,"column":11}},{"generated":{"line":34,"column":18},"source":"History.js","original":{"line":15,"column":6}},{"name":"shift","generated":{"line":34,"column":19},"source":"History.js","original":{"line":15,"column":17}},{"generated":{"line":34,"column":24},"source":"History.js","original":{"line":15,"column":6}},{"generated":{"line":35,"column":0},"source":"History.js","original":{"line":16,"column":6}},{"name":"stack","generated":{"line":35,"column":13},"source":"History.js","original":{"line":16,"column":11}},{"generated":{"line":35,"column":18},"source":"History.js","original":{"line":16,"column":6}},{"name":"push","generated":{"line":35,"column":19},"source":"History.js","original":{"line":16,"column":17}},{"generated":{"line":35,"column":23},"source":"History.js","original":{"line":16,"column":6}},{"name":"obj","generated":{"line":35,"column":24},"source":"History.js","original":{"line":16,"column":22}},{"generated":{"line":35,"column":27},"source":"History.js","original":{"line":16,"column":6}},{"generated":{"line":36,"column":0},"source":"History.js","original":{"line":17,"column":5}},{"generated":{"line":37,"column":0},"source":"History.js","original":{"line":18,"column":3}},{"generated":{"line":40,"column":27},"source":"History.js","original":{"line":19,"column":9}},{"generated":{"line":41,"column":0},"source":"History.js","original":{"line":20,"column":4}},{"generated":{"line":42,"column":0},"source":"History.js","original":{"line":21,"column":4}},{"generated":{"line":42,"column":13},"source":"History.js","original":{"line":21,"column":11}},{"name":"stack","generated":{"line":42,"column":18},"source":"History.js","original":{"line":21,"column":16}},{"generated":{"line":42,"column":23},"source":"History.js","original":{"line":21,"column":11}},{"generated":{"line":42,"column":24},"source":"History.js","original":{"line":21,"column":22}},{"name":"stack","generated":{"line":42,"column":29},"source":"History.js","original":{"line":21,"column":27}},{"generated":{"line":42,"column":34},"source":"History.js","original":{"line":21,"column":22}},{"name":"length","generated":{"line":42,"column":35},"source":"History.js","original":{"line":21,"column":33}},{"generated":{"line":42,"column":41},"source":"History.js","original":{"line":21,"column":22}},{"generated":{"line":42,"column":44},"source":"History.js","original":{"line":21,"column":42}},{"generated":{"line":42,"column":45},"source":"History.js","original":{"line":21,"column":11}},{"generated":{"line":42,"column":46},"source":"History.js","original":{"line":21,"column":4}},{"generated":{"line":43,"column":0},"source":"History.js","original":{"line":22,"column":3}}],"sources":{"History.js":"export default class History {\r\n  //This class is my implementation of a stack that is currently\r\n  // used only to check values in the previous frame(s).\r\n\r\n  constructor(maxhistory) {\r\n    this.stack = [];\r\n    //defines how many frames of historic values should be stored.\r\n    this.maxhistory = 20;\r\n  }\r\n  add(obj) {\r\n    if (this.stack.length < this.maxhistory) {\r\n      //Checks if the length of the stack exceeds the maximum history size.\r\n      this.stack.push(obj);\r\n    } else {\r\n      this.stack.shift();\r\n      this.stack.push(obj);\r\n    }\r\n  }\r\n  peek() {\r\n    // returns the last item added to the stack without removing it.\r\n    return this.stack[this.stack.length - 1];\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"89524f44f89914777f871468a3437616","cacheData":{"env":{}}}