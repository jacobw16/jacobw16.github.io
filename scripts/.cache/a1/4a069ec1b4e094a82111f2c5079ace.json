{"id":"node_modules/@tensorflow/tfjs-layers/dist/regularizers.js","dependencies":[{"name":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\regularizers.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\src\\regularizers.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\package.json","includedInParent":true,"mtime":1582861032163},{"name":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1581030261368},{"name":"@tensorflow/tfjs-core","loc":{"line":27,"column":26},"parent":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\regularizers.js","resolved":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"},{"name":"./backend/tfjs_backend","loc":{"line":28,"column":16},"parent":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\regularizers.js","resolved":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\tfjs_backend.js"},{"name":"./utils/generic_utils","loc":{"line":29,"column":30},"parent":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\regularizers.js","resolved":"C:\\Users\\Jacob\\Documents\\jump(3)\\scripts\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\generic_utils.js"}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* original source: keras/regularizers.py */\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar generic_utils_1 = require(\"./utils/generic_utils\");\nfunction assertObjectArgs(args) {\n    if (args != null && typeof args !== 'object') {\n        throw new Error(\"Argument to L1L2 regularizer's constructor is expected to be an \" +\n            (\"object, but received: \" + args));\n    }\n}\n/**\n * Regularizer base class.\n */\nvar Regularizer = /** @class */ (function (_super) {\n    __extends(Regularizer, _super);\n    function Regularizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Regularizer;\n}(tfjs_core_1.serialization.Serializable));\nexports.Regularizer = Regularizer;\nvar L1L2 = /** @class */ (function (_super) {\n    __extends(L1L2, _super);\n    function L1L2(args) {\n        var _this = _super.call(this) || this;\n        assertObjectArgs(args);\n        _this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n        _this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n        _this.hasL1 = _this.l1 !== 0;\n        _this.hasL2 = _this.l2 !== 0;\n        return _this;\n    }\n    /**\n     * Porting note: Renamed from __call__.\n     * @param x Variable of which to calculate the regularization score.\n     */\n    L1L2.prototype.apply = function (x) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            var regularization = tfjs_core_1.zeros([1]);\n            if (_this.hasL1) {\n                regularization = tfjs_core_1.add(regularization, tfjs_core_1.sum(tfc.mul(_this.l1, tfjs_core_1.abs(x))));\n            }\n            if (_this.hasL2) {\n                regularization =\n                    tfjs_core_1.add(regularization, tfjs_core_1.sum(tfc.mul(_this.l2, K.square(x))));\n            }\n            return regularization.asScalar();\n        });\n    };\n    L1L2.prototype.getConfig = function () {\n        return { 'l1': this.l1, 'l2': this.l2 };\n    };\n    /** @nocollapse */\n    L1L2.fromConfig = function (cls, config) {\n        return new cls({ l1: config['l1'], l2: config['l2'] });\n    };\n    /** @nocollapse */\n    L1L2.className = 'L1L2';\n    return L1L2;\n}(Regularizer));\nexports.L1L2 = L1L2;\ntfjs_core_1.serialization.registerClass(L1L2);\nfunction l1(args) {\n    assertObjectArgs(args);\n    return new L1L2({ l1: args != null ? args.l1 : null, l2: 0 });\n}\nexports.l1 = l1;\nfunction l2(args) {\n    assertObjectArgs(args);\n    return new L1L2({ l2: args != null ? args.l2 : null, l1: 0 });\n}\nexports.l2 = l2;\n// Maps the JavaScript-like identifier keys to the corresponding keras symbols.\nexports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'l1l2': 'L1L2'\n};\nfunction serializeRegularizer(constraint) {\n    return generic_utils_1.serializeKerasObject(constraint);\n}\nexports.serializeRegularizer = serializeRegularizer;\nfunction deserializeRegularizer(config, customObjects) {\n    if (customObjects === void 0) { customObjects = {}; }\n    return generic_utils_1.deserializeKerasObject(config, tfjs_core_1.serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\n}\nexports.deserializeRegularizer = deserializeRegularizer;\nfunction getRegularizer(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        var className = identifier in exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            exports.REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        var config = { className: className, config: {} };\n        return deserializeRegularizer(config);\n    }\n    else if (identifier instanceof Regularizer) {\n        return identifier;\n    }\n    else {\n        return deserializeRegularizer(identifier);\n    }\n}\nexports.getRegularizer = getRegularizer;\n"},"sourceMaps":{"js":{"version":3,"file":"regularizers.js","sourceRoot":"","sources":["../src/regularizers.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* original source: keras/regularizers.py */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {abs, add, Scalar, serialization, sum, Tensor, tidy, zeros} from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport {deserializeKerasObject, serializeKerasObject} from './utils/generic_utils';\n\nfunction assertObjectArgs(args: L1Args | L2Args | L1L2Args): void {\n  if (args != null && typeof args !== 'object') {\n    throw new Error(\n        `Argument to L1L2 regularizer's constructor is expected to be an ` +\n        `object, but received: ${args}`);\n  }\n}\n\n/**\n * Regularizer base class.\n */\nexport abstract class Regularizer extends serialization.Serializable {\n  abstract apply(x: Tensor): Scalar;\n}\n\nexport interface L1L2Args {\n  /** L1 regularization rate. Defaults to 0.01. */\n  l1?: number;\n  /** L2 regularization rate. Defaults to 0.01. */\n  l2?: number;\n}\n\nexport interface L1Args {\n  /** L1 regularization rate. Defaults to 0.01. */\n  l1: number;\n}\n\nexport interface L2Args {\n  /** L2 regularization rate. Defaults to 0.01. */\n  l2: number;\n}\n\nexport class L1L2 extends Regularizer {\n  /** @nocollapse */\n  static className = 'L1L2';\n\n  private readonly l1: number;\n  private readonly l2: number;\n  private readonly hasL1: boolean;\n  private readonly hasL2: boolean;\n  constructor(args?: L1L2Args) {\n    super();\n\n    assertObjectArgs(args);\n\n    this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n    this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n    this.hasL1 = this.l1 !== 0;\n    this.hasL2 = this.l2 !== 0;\n  }\n\n  /**\n   * Porting note: Renamed from __call__.\n   * @param x Variable of which to calculate the regularization score.\n   */\n  apply(x: Tensor): Scalar {\n    return tidy(() => {\n      let regularization: Tensor = zeros([1]);\n      if (this.hasL1) {\n        regularization = add(regularization, sum(tfc.mul(this.l1, abs(x))));\n      }\n      if (this.hasL2) {\n        regularization =\n            add(regularization, sum(tfc.mul(this.l2, K.square(x))));\n      }\n      return regularization.asScalar();\n    });\n  }\n\n  getConfig(): serialization.ConfigDict {\n    return {'l1': this.l1, 'l2': this.l2};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends serialization.Serializable>(\n      cls: serialization.SerializableConstructor<T>,\n      config: serialization.ConfigDict): T {\n    return new cls({l1: config['l1'] as number, l2: config['l2'] as number});\n  }\n}\nserialization.registerClass(L1L2);\n\nexport function l1(args?: L1Args) {\n  assertObjectArgs(args);\n  return new L1L2({l1: args != null ? args.l1 : null, l2: 0});\n}\n\nexport function l2(args: L2Args) {\n  assertObjectArgs(args);\n  return new L1L2({l2: args != null ? args.l2 : null, l1: 0});\n}\n\n/** @docinline */\nexport type RegularizerIdentifier = 'l1l2'|string;\n\n// Maps the JavaScript-like identifier keys to the corresponding keras symbols.\nexport const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP:\n    {[identifier in RegularizerIdentifier]: string} = {\n      'l1l2': 'L1L2'\n    };\n\nexport function serializeRegularizer(constraint: Regularizer):\n    serialization.ConfigDictValue {\n  return serializeKerasObject(constraint);\n}\n\nexport function deserializeRegularizer(\n    config: serialization.ConfigDict,\n    customObjects: serialization.ConfigDict = {}): Regularizer {\n  return deserializeKerasObject(\n      config, serialization.SerializationMap.getMap().classNameMap,\n      customObjects, 'regularizer');\n}\n\nexport function getRegularizer(identifier: RegularizerIdentifier|\n                               serialization.ConfigDict|\n                               Regularizer): Regularizer {\n  if (identifier == null) {\n    return null;\n  }\n  if (typeof identifier === 'string') {\n    const className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n        REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n        identifier;\n    const config = {className, config: {}};\n    return deserializeRegularizer(config);\n  } else if (identifier instanceof Regularizer) {\n    return identifier;\n  } else {\n    return deserializeRegularizer(identifier);\n  }\n}\n"]}},"error":null,"hash":"a6028cff51e39f018ac33461e2b3f06c","cacheData":{"env":{}}}